name: Build and Deploy OpenEMS

on:
  push:
    branches:
      - levl-simulator
    tags:
      - "*.*.*"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  NAMESPACE: levlenergy/openems

jobs:
  build-java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle
      - uses: kiancross/checkstyle-annotations-action@v1
      - name: Checkstyle
        run: ./gradlew checkstyleAll --console=plain --warn
      - name: Build all Java packages and run unit tests
        run: ./gradlew build
      - name: Resolve OpenEMS bundles
        run: ./gradlew resolve
      - name: Validate BackendApp.bndrun
        run: git diff --exit-code io.openems.backend.application/BackendApp.bndrun
      - name: Validate EdgeApp.bndrun
        run: git diff --exit-code io.openems.edge.application/EdgeApp.bndrun
      - name: Prepare Edge+Backend assets
        run: ./gradlew buildEdge buildBackend
      - name: Execute e2e tests
        run: |
          cd test
          bash verify.sh suiteCi
      - name: Save build-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-java
          path: |
            build/openems-edge.jar
            build/openems-backend.jar

  build-ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup Cache for Node.js
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.ng
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Build OpenEMS UI
        run: |
          cd ui
          npm ci --prefer-offline --cache ~/.npm
          node_modules/.bin/ng build -c "openems,openems-edge-prod,prod"
          node_modules/.bin/ng lint
          export CHROME_BIN=/usr/bin/google-chrome-stable
          npm run test -- --code-coverage --no-watch --no-progress --browsers=ChromeHeadlessCI
      - name: Prepare UI asset
        run: |
          mkdir build
          cd ui/target
          zip -r ../../build/openems-ui.zip ./*
      - name: Save build-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-ui
          path: build/openems-ui.zip

  deploy:
    runs-on: self-hosted
    needs: [build-java, build-ui]
    steps:
      - name: Load build-artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: copy file via ssh
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.OPENEMS_SERVER_IP_ADDRESS }}
          username: ${{ secrets.IONOS_CLOUD_GITHUB_USER }}
          key: ${{ secrets.IONOS_CLOUD_GITHUB_PRIVATE_KEY }}
          source: "*"
          target: "/opt/containers/levl/infrastructure/dev/openems"
      - name: Deploy OpenEMS
        uses: appleboy/ssh-action@v1.0.0
        env:
          PASSWORD: ${{ secrets.IONOS_CLOUD_GITHUB_PASSWORD }}
        with:
          host: ${{ secrets.OPENEMS_SERVER_IP_ADDRESS }}
          username: ${{ secrets.IONOS_CLOUD_GITHUB_USER }}
          key: ${{ secrets.IONOS_CLOUD_GITHUB_PRIVATE_KEY }}
          script_stop: true
          envs: PASSWORD
          script: |
            printf '%s\n' "$PASSWORD" | sudo -p "" -S echo login
            cd /opt/containers/levl/infrastructure/dev/openems
            sudo bash redeploy.sh
